
1. 释放同步监视器的锁定
任何线程进入同步代码块、同步方法之前，必须先获得对同步监视器的锁定，那么何时会释放对同步监视器的锁定呢？
程序无法显式释放对同步监视器的锁定，线程会在如下几种情况下释放对同步监视器的锁定。
    1. 当前线程的同步方法、同步代码块执行结束，当前线程即释放同步监视器；
    2. 当前线程在同步方法、同步代码块中遇到break、return终止了该部分的继续执行，当前线程将会释放同步监视器；
    3. 当前线程在同步方法、同步代码块中出现了未处理的Error或Exception，导致该部分异常结束是，释放；
    4. 当前线程在同步方法、同步代码块时，程序执行了同步监视器对象的wait()方法，当前线程暂停，并释放...；
如下情况下，线程不会释放同步监视器：
    1. 程序调用 Thread.sleep()、Thread.yield() 方法暂停当前线程的执行，当前线程不会释放同步监视器；
    2. 线程执行同步代码块时，其他线程调用了该线程的 suspend() 方法将该线程挂起，该线程不会释放同步监视器；
        （尽量不要使用suspend() 和 resume() 方法来控制线程）